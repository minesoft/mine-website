# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ master ]
  # pull_request:
  #   branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        java: [ '17' ]

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK ${{ matrix.Java }}
      uses: actions/setup-java@v2
      with:
        java-version: ${{ matrix.java }}
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml -Dmaven.test.skip=true

    - name: 删除旧jar包
      run: sshpass -p ${{secrets.SERVER_PASSWORD}} ssh -p ${{ secrets.SERVER_PORT }} -o StrictHostKeyChecking=no ${{ secrets.SERVER_USERNAME }}@${{secrets.SERVER_IP}} "cd ${{ secrets.SERVER_DESTINATION_JAR }} && rm -rf ./yudao-server.jar"

    - name: 上传jar包
      run: sshpass -p ${{secrets.SERVER_PASSWORD}} scp -P ${{ secrets.SERVER_PORT }} -r -o StrictHostKeyChecking=no ./yudao-server/target/yudao-server.jar ${{ secrets.SERVER_USERNAME }}@${{secrets.SERVER_IP}}:${{ secrets.SERVER_DESTINATION_JAR }}

    - name: 启动项目
      run: sshpass -p ${{secrets.SERVER_PASSWORD}} ssh -p ${{ secrets.SERVER_PORT }} -o StrictHostKeyChecking=no ${{ secrets.SERVER_USERNAME }}@${{secrets.SERVER_IP}} "cd ${{ secrets.SERVER_DESTINATION_JAR }} && ./start.sh"
